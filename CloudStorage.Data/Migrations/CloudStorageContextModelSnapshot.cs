// <auto-generated />
using System;
using CloudStorage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CloudStorage.Data.Migrations
{
    [DbContext(typeof(CloudStorageContext))]
    partial class CloudStorageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CloudStorage.Data.Storages.StorageDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Secret")
                        .HasColumnType("text")
                        .HasColumnName("secret");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_storage_id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_storages_user_id");

                    b.ToTable("storages", (string)null);
                });

            modelBuilder.Entity("CloudStorage.Data.Users.UserDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("salt");

                    b.HasKey("Id")
                        .HasName("pk_user_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("CloudStorage.Data.Storages.StorageDbModel", b =>
                {
                    b.HasOne("CloudStorage.Data.Users.UserDbModel", "User")
                        .WithOne("Storage")
                        .HasForeignKey("CloudStorage.Data.Storages.StorageDbModel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_storages_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CloudStorage.Data.Users.UserDbModel", b =>
                {
                    b.Navigation("Storage")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
